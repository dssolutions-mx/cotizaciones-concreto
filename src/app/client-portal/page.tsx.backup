'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { motion } from 'framer-motion';
import { 
  Package, 
  TrendingUp, 
  DollarSign, 
  CheckCircle, 
  Truck,
  FileText,
  BarChart3,
  Calendar,
  MapPin,
  Clock
} from 'lucide-react';
import { Container } from '@/components/ui/Container';
import { MetricCard } from '@/components/ui/MetricCard';
import { ActivityCard } from '@/components/ui/ActivityCard';
import { QuickAction } from '@/components/ui/QuickAction';
import { Card as BaseCard } from '@/components/ui/Card';
import { format } from 'date-fns';
import { es } from 'date-fns/locale';

interface DashboardData {
  metrics: {
    totalOrders: number;
    deliveredVolume: number;
    currentBalance: number;
    qualityScore: number;
  };
  recentActivity: Array<{
    id: string;
    type: 'delivery' | 'order' | 'payment' | 'quality';
    title: string;
    description: string;
    timestamp: string;
  }>;
  upcomingDeliveries: Array<{
    id: string;
    orderNumber: string;
    site: string;
    date: string;
    volume: number;
  }>;
}

export default function ClientPortalDashboard() {
  const router = useRouter();
  const [data, setData] = useState<DashboardData | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchDashboard() {
      try {
        const response = await fetch('/api/client-portal/dashboard');
        const result = await response.json();
        setData(result);
      } catch (error) {
        console.error('Error fetching dashboard:', error);
      } finally {
        setLoading(false);
      }
    }

    fetchDashboard();
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <motion.div
          animate={{ rotate: 360 }}
          transition={{ duration: 1, repeat: Infinity, ease: 'linear' }}
          className="w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full"
        />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50/30 to-purple-50/20">
      <Container maxWidth="2xl" className="py-8">
        {/* Welcome Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-8"
        >
          <h1 className="text-large-title font-bold text-gray-900 mb-2">
            Bienvenido
          </h1>
          <p className="text-body text-gray-600">
            {format(new Date(), "EEEE, d 'de' MMMM", { locale: es })}
          </p>
        </motion.div>

        {/* Key Metrics */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.1 }}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8"
        >
          <MetricCard
            title="Pedidos Totales"
            value={data?.metrics.totalOrders || 0}
            subtitle="Histórico"
            icon={<Package className="w-6 h-6" />}
            color="blue"
            onClick={() => router.push('/client-portal/orders')}
          />
          <MetricCard
            title="Volumen Entregado"
            value={`${data?.metrics.deliveredVolume || 0} m³`}
            subtitle="Total acumulado"
            icon={<TrendingUp className="w-6 h-6" />}
            trend={{ value: 12.5, label: 'vs mes anterior' }}
            color="green"
            onClick={() => router.push('/client-portal/orders')}
          />
          <MetricCard
            title="Balance Actual"
            value={`$${(data?.metrics.currentBalance || 0).toLocaleString('es-MX')}`}
            subtitle="Saldo pendiente"
            icon={<DollarSign className="w-6 h-6" />}
            color="orange"
            onClick={() => router.push('/client-portal/balance')}
          />
          <MetricCard
            title="Calidad Promedio"
            value={`${data?.metrics.qualityScore || 0}%`}
            subtitle="Cumplimiento"
            icon={<CheckCircle className="w-6 h-6" />}
            trend={{ value: 2.3, label: 'vs mes anterior' }}
            color="purple"
            onClick={() => router.push('/client-portal/quality')}
          />
        </motion.div>

      {/* Quick Actions */}
      <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="mb-8"
        >
          <div className="glass-thick rounded-3xl p-6">
            <h2 className="text-title-2 font-bold text-gray-900 mb-6">
              Acciones Rápidas
            </h2>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <QuickAction
                icon={<Package className="w-6 h-6" />}
                label="Ver Pedidos"
                onClick={() => router.push('/client-portal/orders')}
                color="blue"
              />
              <QuickAction
                icon={<FileText className="w-6 h-6" />}
                label="Balance"
                onClick={() => router.push('/client-portal/balance')}
                color="green"
              />
              <QuickAction
                icon={<BarChart3 className="w-6 h-6" />}
                label="Calidad"
                onClick={() => router.push('/client-portal/quality')}
                color="purple"
              />
              <QuickAction
                icon={<Calendar className="w-6 h-6" />}
                label="Programar"
                onClick={() => router.push('/client-portal/orders')}
                color="orange"
              />
            </div>
          </div>
        </motion.div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Recent Activity */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.3 }}
          >
            <div className="glass-thick rounded-3xl p-6 h-full">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-title-2 font-bold text-gray-900">
                  Actividad Reciente
                </h2>
                <button className="text-callout text-blue-600 font-medium hover:text-blue-700">
                  Ver todo
                </button>
              </div>

              <div className="space-y-3">
                <ActivityCard
                  icon={<Truck className="w-5 h-5" />}
                  title="Entrega completada"
                  description="15.5 m³ entregados en Obra Centro"
                  timestamp="Hace 2 horas"
                  status="success"
                />
                <ActivityCard
                  icon={<FileText className="w-5 h-5" />}
                  title="Nuevo pedido procesado"
                  description="Pedido #2847 - 25 m³ programado"
                  timestamp="Hace 5 horas"
                  status="info"
                />
                <ActivityCard
                  icon={<CheckCircle className="w-5 h-5" />}
                  title="Ensayo de calidad aprobado"
                  description="Resistencia: 285 kg/cm² (98% cumplimiento)"
                  timestamp="Ayer"
                  status="success"
                />
              </div>
            </div>
          </motion.div>

          {/* Upcoming Deliveries */}
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.4 }}
          >
            <div className="glass-thick rounded-3xl p-6 h-full">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-title-2 font-bold text-gray-900">
                  Próximas Entregas
                </h2>
                <button className="text-callout text-blue-600 font-medium hover:text-blue-700">
                  Calendario
                </button>
              </div>

              <div className="space-y-4">
                {[
                  { order: '#2851', site: 'Obra Norte', date: 'Mañana, 8:00 AM', volume: 18.5 },
                  { order: '#2852', site: 'Plaza Comercial', date: 'Mañana, 2:00 PM', volume: 22.0 },
                  { order: '#2853', site: 'Residencial Sur', date: 'Jueves, 10:00 AM', volume: 15.0 }
                ].map((delivery, index) => (
                  <motion.div
                    key={delivery.order}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.5 + index * 0.1 }}
                    className="glass-thin rounded-2xl p-4 hover:glass-thick transition-all cursor-pointer"
                  >
                    <div className="flex items-start justify-between mb-3">
                      <div>
                        <p className="text-body font-semibold text-gray-900">
                          Pedido {delivery.order}
                        </p>
                        <p className="text-callout text-gray-600 flex items-center gap-1 mt-1">
                          <MapPin className="w-4 h-4" />
                          {delivery.site}
                        </p>
                      </div>
                      <span className="text-title-3 font-bold text-blue-600">
                        {delivery.volume} m³
                      </span>
                    </div>
                    <div className="flex items-center gap-2 text-footnote text-gray-500">
                      <Clock className="w-4 h-4" />
                      {delivery.date}
                    </div>
                  </motion.div>
                ))}
              </div>
            </Card>
          </motion.div>
        </div>
      </Container>
    </div>
  );
}